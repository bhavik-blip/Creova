// Import necessary dependencies
import React, { useState } from "react";
import { auth } from "./firebaseConfig"; // Firebase configuration file
import { signInWithEmailAndPassword, createUserWithEmailAndPassword } from "firebase/auth";
import { loadStripe } from "@stripe/stripe-js";

const stripePromise = loadStripe("your-stripe-public-key");

const Auth = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [isSignUp, setIsSignUp] = useState(false);

  const handleAuth = async (e) => {
    e.preventDefault();
    try {
      if (isSignUp) {
        await createUserWithEmailAndPassword(auth, email, password);
      } else {
        await signInWithEmailAndPassword(auth, email, password);
      }
      alert("Success!");
    } catch (error) {
      alert(error.message);
    }
  };

  const handleSubscription = async (plan) => {
    const stripe = await stripePromise;
    const response = await fetch("/api/create-checkout-session", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, plan }),
    });
    const session = await response.json();
    await stripe.redirectToCheckout({ sessionId: session.id });
  };

  return (
    <div className="auth-container">
      <h2>{isSignUp ? "Sign Up" : "Login"}</h2>
      <form onSubmit={handleAuth}>
        <input type="email" placeholder="Email" value={email} onChange={(e) => setEmail(e.target.value)} required />
        <input type="password" placeholder="Password" value={password} onChange={(e) => setPassword(e.target.value)} required />
        <button type="submit">{isSignUp ? "Sign Up" : "Login"}</button>
      </form>
      <p onClick={() => setIsSignUp(!isSignUp)}>
        {isSignUp ? "Already have an account? Login" : "Don't have an account? Sign Up"}
      </p>
      <h3>Choose Your Subscription</h3>
      <button onClick={() => handleSubscription("monthly")}>₹20 for 1 Month</button>
      <button onClick={() => handleSubscription("quarterly")}>₹50 for 3 Months</button>
      <button onClick={() => handleSubscription("yearly")}>₹100 for 1 Year</button>
    </div>
  );
};

export default Auth;

// Backend Code (Express.js for Handling Stripe Payments)
// Create a file: server.js
const express = require("express");
const cors = require("cors");
const stripe = require("stripe")("your-stripe-secret-key");

const app = express();
app.use(express.json());
app.use(cors());

const prices = {
  monthly: 2000, // ₹20 in paise
  quarterly: 5000, // ₹50 in paise
  yearly: 10000, // ₹100 in paise
};

app.post("/api/create-checkout-session", async (req, res) => {
  const { email, plan } = req.body;
  try {
    const session = await stripe.checkout.sessions.create({
      payment_method_types: ["card"],
      customer_email: email,
      line_items: [
        {
          price_data: {
            currency: "inr",
            product_data: { name: "Creova Subscription" },
            unit_amount: prices[plan],
          },
          quantity: 1,
        },
      ],
      mode: "subscription",
      success_url: "https://your-app-url.com/success",
      cancel_url: "https://your-app-url.com/cancel",
    });
    res.json({ id: session.id });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

app.listen(5000, () => console.log("Server running on port 5000"));
